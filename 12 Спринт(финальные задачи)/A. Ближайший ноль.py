#Улица, на которой хочет жить Тимофей, имеет длину n, то есть состоит из n одинаковых идущих подряд участков.
#На каждом участке либо уже построен дом, либо участок пустой. Тимофей ищет место для строительства своего дома.
#Тимофей очень общителен и не хочет жить далеко от знакомых, которых у него вся улица.
#Чтобы оптимально выбрать место для строительства, он хочет для каждого участка знать расстояние до ближайшего пустого участка.
#(Для пустого участка эта величина будет равна нулю — расстояние до самого себя.)

#Ваша задача — помочь Тимофею посчитать искомые расстояния. Для этого у вас есть карта улицы.
#Дома в городе Тимофея нумеровались в том порядке, в котором строились, поэтому их номера на карте никак не упорядочены.
#Пустые участки обозначены нулями.

#Формат ввода
#В первой строке дана длина улицы — n (1 ≤ n ≤ 106). 
#В следующей строке записаны n целых неотрицательных чисел — номера домов и обозначения пустых участков на карте (нули).
#Гарантируется, что в последовательности есть хотя бы один ноль. Номера домов (положительные числа) уникальны и не превосходят 109.

#Формат вывода
#Для каждого из участков выведите расстояние до ближайшего нуля. Числа выводите в одну строку, разделяя их пробелами.

#Пример 1
#Ввод 5
#0 1 4 9 0
#Вывод
#0 1 2 1 0


def distance(num, plan):
    step = None

    for i in range(num):
        if plan[i] == 0:
            step = 0
        elif step is not None:
            step +=1
            plan[i] = step
        else:
            plan[i] = float('inf') 

    for i in range(num)[::-1]:         
        if plan[i] == 0:
            step = 0   
        else:
            step +=1 
            plan[i] = min(plan[i],step)

    return plan
    

if __name__ == '__main__':
    num = int(input())
    plan= list(map(int, input().split()))
    print(*distance(num, plan))
